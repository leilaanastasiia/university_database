from aiogram import types
from aiogram.dispatcher import FSMContext

from app.bot import bot, dp, LIST_OF_ADMINS
from app.db import get_topics_list, get_row, delete_rows, delete_row, insert_row
from app.states import Admin


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    """
    Shows greeting.
    """
    await message.reply('–ü—Ä–∏–≤—ñ—Ç!\n'
                        '–Ø –±–æ—Ç –∫–∞—Ñ–µ–¥—Ä–∏ –±—ñ–æ–ª–æ–≥—ñ—ó —Ä–æ—Å–ª–∏–Ω üå∏\n'
                        '–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –ª–µ–∫—Ü—ñ—ó, —â–æ –±—É–¥–µ –¥–ª—è –º–µ–Ω–µ –∫–ª—é—á–µ–º '
                        '–¥–ª—è –ø–æ—à—É–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ—ó —Ç–æ–±—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.')


@dp.message_handler(commands=['help'])
async def send_welcome(message: types.Message):
    """
    Shows explanations what could be done wrong.
    """
    await message.reply('1. –ë—É–¥—å-—è–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ –ø–æ—á–Ω–∞—î—Ç—å—Å—è –±–µ–∑ "/(–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏)", '
                        '—è —Å–ø—Ä–∏–π–º–∞—é —è–∫ –Ω–∞–∑–≤—É —Ç–µ–º—É –¥–ª—è –ø–æ—à—É–∫—É –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤. '
                        '–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ —ñ–Ω—à—ñ –¥—ñ—ó - –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –∞–±–æ –Ω–∞–¥—Ä—É–∫—É–π —ó—Ö.\n\n'
                        '2. –ù–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–µ - –≤–≤–æ–¥—å —Ç–µ–º–∏ –¥–ª—è –ø–æ—à—É–∫—É, —â–æ –≤–∫–∞–∑–∞–Ω—ñ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∫–æ–º–∞–Ω–¥–∏ /topics. '
                        '–ë–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –∑–Ω–∞–∫—ñ–≤. –¶–µ –∑–º–µ–Ω—à–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º–æ–∂–ª–∏–≤–∏—Ö –ø–æ–º–∏–ª–æ–∫. \n\n'
                        '\nüìç –Ø–∫—â–æ –≤—Å–µ –æ–¥–Ω–æ –≤–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞ - –∑–∞—Å–∫—Ä—ñ–Ω—å —Å–≤–æ—ó –¥—ñ—ó —Ç–∞ —Å–∫–∏–Ω—å –Ω–∞–ø—Ä—è–º—É '
                        '—Ä–æ–∑—Ä–æ–±–Ω–∏—Ü—ñ: @leilaanastasiia\n–ù–∞–º–∞–≥–∞—Ç–∏–º—É—Å—å –¥–æ–ø–æ–º–æ–≥—Ç–∏ ü™¥')


@dp.message_handler(commands=['topics'])
async def send_topics(message: types.Message):
    """
    Shows list of available topics.
    """
    output = ''
    try:
        topics = get_topics_list()
        for topic in topics:
            output += topic + '\n'
        await message.reply(f'{output}')
    except Exception:
        await message.reply('–£ –±–∞–∑—ñ –ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ–º.')


@dp.message_handler(commands=['admin'])
async def admin(message: types.Message):
    """
    Gives access only for admins.
    """
    user_id = str(message.from_user.id)
    if user_id in LIST_OF_ADMINS:
        keyboard_markup = types.InlineKeyboardMarkup(row_width=2)
        text_and_data = (
            ('–î–æ–¥–∞—Ç–∏ —Ç–µ–º—É', 'add'),
            ('–í–∏–¥–∞–ª–∏—Ç–∏ —Ç–µ–º—É', 'delete'),
            ('–û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—é –±–∞–∑—É', 'clear'),
        )
        row_btns = (types.InlineKeyboardButton(text, callback_data=data) for text, data in text_and_data)
        keyboard_markup.add(*row_btns)
        await message.reply('–î–æ—Å—Ç—É–ø –¥–æ–∑–≤–æ–ª–µ–Ω–æ üåø\n'
                            '–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏:', reply_markup=keyboard_markup)
    else:
        await message.reply('–¢–∏ –Ω–µ –ø—Ä–æ–π–¥—å–æ—à!')


@dp.message_handler(state='*', commands='cancel')
async def cancel_handler(message: types.Message, state: FSMContext):
    """
    Allows user to cancel any action.
    """
    current_state = await state.get_state()
    if current_state is None:
        return
    # Cancel state and inform user about it
    await state.finish()
    await message.reply('–í–∏ –≤–∏–π—à–ª–∏ –∑ –º–µ–Ω—é –¥–ª—è –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤.')


@dp.callback_query_handler(text='add')
async def callback_add_topic(query: types.CallbackQuery):
    """
    Callback for 'add' button.
    """
    await Admin.add.set()
    text = '–©–æ–± –¥–æ–¥–∞—Ç–∏ —Ç–µ–º—É —É –±–∞–∑—É, –≤–≤–µ–¥—ñ—Ç—å –≤—Å—ñ –¥–∞–Ω—ñ –æ–¥–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º. ' \
           '–†–æ–∑–¥—ñ–ª—é–≤–∞—á - –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫.\n\n' \
           'üìç –î–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—å –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ:\n- –ù–∞–∑–≤–∞ —Ç–µ–º–∏\n- –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—é –ª–µ–∫—Ü—ñ—ó\n' \
           '- –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ–∑–∞–ø–∏—Å –ª/—Ä\n' \
           '- –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª –ª/—Ä\n- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –≤–∏–∫–ª–∞–¥–∞—á–∞\n\n' \
           '–©–æ–± –≤–∏–π—Ç–∏ –∑ –º–µ–Ω—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ–º, –Ω–∞ –±—É–¥—å-—è–∫–æ–º—É –π–æ–≥–æ –µ—Ç–∞–ø—ñ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ /cancel'
    await query.answer('–í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ üå∏')
    await bot.send_message(query.from_user.id, text)


@dp.message_handler(state=Admin.add)
async def add_topic(message: types.Message, state: FSMContext):
    """
    Adds topics to the database.
    """
    topics = get_topics_list()
    data = message.text.split('\n')
    if len(data) < 5:
        await message.reply('–ó–¥–∞—î—Ç—å—Å—è, –Ω–µ –≤—Å—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ ü§î\n'
                            '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–æ–¥—å—Ç–µ –¥–∞–Ω–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ, —â–æ –≤–∫–∞–∑–∞–Ω–∏–π –≤–∏—â–µ.')
        return
    if len(data) > 5:
        await message.reply('–ó–¥–∞—î—Ç—å—Å—è, –≤–≤–µ–¥–µ–Ω–æ –∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –¥–∞–Ω–∏—Ö ü§î\n'
                            '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–æ–¥—å—Ç–µ –¥–∞–Ω–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ, —â–æ –≤–∫–∞–∑–∞–Ω–∏–π –≤–∏—â–µ.')
        return
    elif data[0] in topics:
        await message.reply(f'–¢–µ–º–∞ "{data[0]}" –≤–∂–µ —î –≤ –±–∞–∑—ñ.\n')
        return

    insert_row(message.text)
    await message.reply(f'–¢–µ–º–∞ "{data[0]}" —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∞ –¥–æ —Å—Ö–æ–≤–∏—â–∞!')
    await state.finish()


@dp.callback_query_handler(text='delete')
async def callback_delete_topic(query: types.CallbackQuery):
    """
    Callback for 'add' button.
    """
    await Admin.delete.set()
    text = '–©–æ–± –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–µ–º—É, –≤–≤–µ–¥—ñ—Ç—å —ó—ó –Ω–∞–∑–≤—É.\n' \
           '–©–æ–± –≤–∏–π—Ç–∏ –∑ —Ü—å–æ–≥–æ –º–µ–Ω—é - /cancel'
    await query.answer('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–µ–º–∏ üçÇ')
    await bot.send_message(query.from_user.id, text)


@dp.message_handler(state=Admin.delete)
async def delete_topic(message: types.Message, state: FSMContext):
    """
    Deletes topics from the database.
    """
    topics = get_topics_list()
    if message.text not in topics:
        await message.reply(f'–¢–µ–º–∞ "{message.text}" —É –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞.\n')
        return

    delete_row(message.text)
    await message.reply(f'–¢–µ–º–∞ "{message.text}" —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∞ –∑—ñ —Å—Ö–æ–≤–∏—â–∞!')
    await state.finish()


@dp.callback_query_handler(text='clear')
async def callback_clear(query: types.CallbackQuery):
    """
    Delete all rows in the table.
    """
    delete_rows()
    text = '–ë–∞–∑—É –ø–æ–≤–Ω—ñ—Å—Ç—é –æ—á–∏—â–µ–Ω–æ!'
    await query.answer(text)
    await bot.send_message(query.from_user.id, text)


@dp.message_handler()
async def send_reply(message: types.Message):
    """
    Searches the name of the topic and sends data if exists.
    """
    themes = get_topics_list()
    if message.text in themes:
        row = get_row(message.text)
        await message.reply(f'–¢–µ–º–∞: {row[0][0]}\n\n'
                             f'–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ª–µ–∫—Ü—ñ—é: {row[0][1]}\n\n'
                             f'–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ–∑–∞–ø–∏—Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ—ó —Ä–∞–±–æ—Ç–∏: {row[0][2]}\n\n'
                             f'–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª –ª–æ–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ—ó —Ä–æ–±–æ—Ç–∏: {row[0][3]} \n\n'
                             f'–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –≤–∏–∫–ª–∞–¥–∞—á–∞: {row[0][4]}\n\n'
                             '–£—Å–ø—ñ—Ö—ñ–≤!')
    else:
        await message.reply(f'–¢–∞–∫–æ—ó —Ç–µ–º–∏ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ü§î')
